limit_req_zone $binary_remote_addr zone=api:5m rate=2r/s;

upstream app {
    server app:8080;
}

server {
    listen 80;
    server_name littlesis.local localhost;
    root /littlesis/public;

    error_log /var/log/nginx/error.log notice;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    location / {
        proxy_pass http://app;
    }

    location /api {
        limit_req zone=api burst=2 nodelay;

        # our API only accepts GET requests
        if ($request_method = 'POST') {
            return 405;
        }

        # cors preflight
        if ($request_method = 'OPTIONS') {
            # add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS, HEAD';  # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Max-Age' 10;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }


        # Allows any cross origin get request
        # Caches requests for two minutes
        if ($request_method = 'GET') {
            expires 120s;
            add_header Cache-Control "public";
            add_header 'Access-Control-Allow-Origin' *;
            proxy_pass http://app;
        }
        # Any site may make requests to /api routes
    }

    # This enables CORS only for oligrapher API routes
    location ~ ^/(maps|oligrapher)/(find_nodes|find_connections|get_edges|node_with_edges|edges_with_nodes|interlocks|search)$ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            proxy_pass http://app;
        }
    }

    location ~ ^/(org|person)/([0-9]+)/.+/recipients$ {
    	 rewrite ^/(org|person)/([0-9]+)/.+/recipients$ /entities/$2?relationships=donation_recipients break;
    }

    location ~ "^/person/[3]{2}[789]{1}[0-9]{3}$" {
        return 403;
    }

    # http://littlesis.org/list/852/Top_Fortune_500_companies_in_NYC
    location ~ ^/list/([0-9]+)/(.+)$ {
       rewrite ^/list/([0-9]+)/(.+)$ /lists/$1 break;
    }

    # These are regular rails routes
    location ~ ^/images/[0-9]+/(crop|crop_remote|request_deletion|update) {
        proxy_pass http://app;
    }

    location ~ ^/images/(approve_deletion|deny_deletion|deletion_request)/(.+)$ {
        proxy_pass http://app;
    }

    # static image assets
    location /images {
        expires 1M;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    location /js {
      root /var/www/static;
      try_files $uri =404;
      expires 1M;
    }

    location ~ \.pdf {
       root /var/www/static;
       try_files $uri =404;
    }

    location = /favicon.ico {
      root /var/www/static;
      try_files $uri =404;
      expires 6M;
    }

    location ~ /apple-touch-icon(.*)\.png {
        root /var/www/static;
        try_files $uri =404;
        expires 6M;
        access_log off;
        log_not_found off;
    }

    # Compiled Oligrapher 3.0 Assets
    location ~ ^/oligrapher/oligrapher-.*\.js$ {
        expires 1h;
        add_header Cache-Control public;
        try_files $uri =404;
    }

    # list 79 is used as the U.S. network and should not be accessible.
    location ~ ^/lists/79-?.*/members$ {
          return 404;
    }

    # rewrite relationship view page from legacy url
    location /relationship/view {
        rewrite ^/relationship/view/id/([0-9]+)$ /relationships/$1 break;
    }

    location ~ ^//?dfl6orqdcqt4f.cloudfront.net/(.*) {
        return 301 https://dfl6orqdcqt4f.cloudfront.net/$1;
    }

    location = /robots.txt {
        expires 5d;
        add_header Cache-Control "public";
    }

    location = /api/robots.txt {
        return 301 $scheme://$http_host/robots.txt;
    }
}
