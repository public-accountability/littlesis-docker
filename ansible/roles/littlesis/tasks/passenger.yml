---
- name: Add Passenger key
  apt_key:
    keyserver: 'hkp://keyserver.ubuntu.com:80'
    id: 561F9B9CAC40B2F7

- name: Add passenger Repo
  apt_repository:
    repo: 'deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main'
    state: present
    update_cache: yes

- name: Install Passenger & Nginx
  apt:
    name:
      - nginx-full
      - libnginx-mod-http-passenger

- name: Enable the Passenger Nginx module and restart Nginx
  file:
    src: /usr/share/nginx/modules-available/mod-http-passenger.load
    dest: /etc/nginx/modules-enabled/50-mod-http-passenger.conf
    state: link
  notify: restart nginx

- name: Copy mod-http-passenger.conf
  copy:
    src: mod-http-passenger.conf
    dest: /etc/nginx/conf.d/mod-http-passenger.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: create /var/www/static
  file:
    path: /var/www/static
    state: directory
    owner: root
    group: www-data
    mode: 0644
    recurse: yes
  tags: static

- name: Copy static files
  synchronize:
    src: ../static/
    dest: /var/www/static
    use_ssh_args: yes
    delete: yes
    recursive: yes
  tags: static

- name: Set permissions on static files
  file:
    path: /var/www/static
    state: directory
    owner: root
    group: www-data
    mode: 0644
    recurse: yes
  tags: static

- name: Set permissions on static file directory
  file:
    path: /var/www/static
    state: directory
    owner: root
    group: www-data
    mode: 0755
  tags: static

- name: Set directory permissions on subfolders
  command: find /var/www/static -type d -exec chmod 0755 {} \;
  tags: static

- name: Validate install
  shell: /usr/bin/passenger-config validate-install --auto
  register: passenger_validate_install
  changed_when: false
  failed_when: passenger_validate_install.rc != 0
  tags: passenger-validate

- debug: msg="{{ passenger_validate_install.stdout_lines }}"
  tags: passenger-validate

- name: Find ruby correct ruby command
  shell: "sudo -H -u littlesis bash -l -c 'cd /var/www/littlesis && rvm {{ ruby_version }} do passenger-config about ruby-command' | grep 'Command:' | sed 's/Command://' | xargs"
  changed_when: false
  register: ruby_command
  tags: passenger-configure

- name: print ruby_command
  debug:
    msg: "Using Ruby Command: {{ ruby_command.stdout }}"
  tags: passenger-configure

- name: Create /etc/nginx/certs folder
  file:
    path: /etc/nginx/certs
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy TLS Cert
  copy:
    content: "{{ tls_certificate }}"
    dest: /etc/nginx/certs/certificate.pem
    owner: root
    group: root
    mode: 0600
  no_log: true

- name: Copy TLS Key
  copy:
    content: "{{ tls_key }}"
    dest: /etc/nginx/certs/key.pem
    owner: root
    group: root
    mode: 0600
  no_log: true

- name: Copy nginx configuration
  template:
    src: "{{ nginx_conf_template | default('nginx.conf.j2') }}"
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
  tags: passenger-configure

- name: Copy realip configuration
  copy:
    src: realip.conf
    dest: /etc/nginx/conf.d/realip.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
  tags:
    - passenger-configure

- name: Copy nginx ssl configuration
  template:
    src: ssl.conf.j2
    dest: /etc/nginx/ssl.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
  tags: passenger-configure

- name: Copy littlesis.org nginx configuration
  template:
    src: littlesis.org.j2
    dest: /etc/nginx/sites-enabled/littlesis.org
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
  tags: passenger-configure

- name: Copy api.littlesis.org nginx configuration
  copy:
    src: api.littlesis.org
    dest: /etc/nginx/sites-enabled/api.littlesis.org
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
  tags: 
    - passenger-configure
    - nginx-api
